{
  "name": "api-easy",
  "description": "Fluent (i.e. chainable) syntax for generating vows tests against RESTful APIs.",
  "version": "0.3.2",
  "author": {
    "name": "Nodejitsu Inc.",
    "email": "info@nodejitsu.com"
  },
  "contributors": [
    {
      "name": "Charlie Robbins",
      "email": "charlie@nodejitsu.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "http://github.com/flatiron/api-easy.git"
  },
  "keywords": [
    "testing",
    "api",
    "REST",
    "vows"
  ],
  "dependencies": {
    "pkginfo": "0.2.x",
    "request": "2.x.x",
    "vows": "0.6.x"
  },
  "devDependencies": {
    "director": "~1.0.3",
    "formidable": "1.0.2",
    "mkdirp": "0.2.x"
  },
  "main": "./lib/api-easy",
  "scripts": {
    "test": "vows test/*-test.js --spec"
  },
  "engines": {
    "node": ">= 0.4.3"
  },
  "readme": "# APIeasy [![Build Status](https://secure.travis-ci.org/flatiron/api-easy.png)](http://travis-ci.org/flatiron/api-easy)\n\nA fluent (i.e. chainable) syntax for generating vows tests against RESTful APIs.\n\n## Installation\n\n### Installing npm (node package manager)\n``` bash\n  $ curl http://npmjs.org/install.sh | sh\n```\n\n### Installing APIeasy\n``` bash\n  $ [sudo] npm install api-easy\n```\n\n## Purpose\nAPIeasy is designed to be a simple way to test RESTful APIs in [node.js][0] and Javascript. The primary design goal was to reduce the number of lines of test code required to fully cover all primary and edge use cases of a given API over HTTP. \n\n## Getting Started\nMost of the documentation for this library is available through the [annotated source code, available here][1] thanks to [jashkenas][2] and [docco][3]. If you're not feeling up for that, just keep reading here. tldr;? [Read how to use APIeasy in your own projects][4]\n\nIf you're going to use APIeasy (and I hope you do), it's worth taking a moment to understand the way that [vows][5] manages flow control. Read up here on [vowsjs.org][5] (Under \"Structure of a test suite\"), or just remember vows uses this grammatical structure:\n\n```\n  Suite   → Batch*\n  Batch   → Context*\n  Context → Topic? Vow* Context*\n```\n\nGot it? Good. There is a 1-to-1 relationship between a APIeasy suite and a vows suite; APIeasy is essentially a simpler syntax to manage a particular set of vows-based tests that conform to this pattern:\n\n1. Tests are performed by making HTTP requests against an API server\n2. Assertions are made against the HTTP response and JSON response body\n3. Rinse. Repeat.\n\nHere's a sample of the boilerplate code that APIeasy eliminates:\n\n``` js\n  var request = require('request'),\n      vows = require('vows'),\n      assert = require('assert');\n  \n  vows.describe('your/awesome/api').addBatch({\n    \"When using your awesome api\": {\n      \"and your awesome resource\": {\n        \"A POST to /awesome\": {\n          topic: function () {\n            request({\n              uri: 'http://localhost:8080/awesome',\n              method: 'POST',\n              body: JSON.stringify({ test: 'data' }),\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            }, this.callback)\n          },\n          \"should respond with 200\": function (err, res, body) {\n            assert.equal(res.statusCode, 200);\n          },\n          \"should respond with ok\": function (err, res, body) {\n            var result = JSON.parse(body);\n            assert.equal(result.ok, true);\n          },\n          \"should respond with x-test-header\": function (err, res, body) {\n            assert.include(res.headers, 'x-test-header');\n          }\n        }\n      }\n    }\n  }).export(module);\n```\n\nThis same code can be implemented like this using APIeasy:\n\n``` js\n  var APIeasy = require('api-easy'),\n      assert = require('assert');\n      \n  var suite = APIeasy.describe('your/awesome/api');\n  \n  suite.discuss('When using your awesome API')\n       .discuss('and your awesome resource')\n       .use('localhost', 8080)\n       .setHeader('Content-Type', 'application/json')\n       .post({ test: 'data' })\n         .expect(200, { ok: true })\n         .expect('should respond with x-test-header', function (err, res, body) {\n           assert.include(res.headers, 'x-test-header');\n         })\n       .export(module);\n```\n\n<a name=\"using-api-easy\">\n## Using APIeasy in your own project\nThere are two ways to use APIeasy in your own project:\n\n1. Using npm\n2. Using vows directly\n\n### Using APIeasy with npm\nIf you've used the `npm test` command in [npm][7] before, this should be nothing new. You can read more about the [npm test command here][8]. All you need to do is add the following to your `package.json` file:\n\n``` js\n {\n   \"dependencies\": {\n     \"api-easy\": \"0.2.x\"\n   },\n   \"scripts\": {\n     \"test\": \"vows test/*-test.js\"\n   }\n }\n```\n\n**Note:** `test/*-test.js` is at your discretion. It's just an expression for all test files in your project. \n\nAfter adding this to your `package.json` file you can run the following to execute your tests:\n\n``` bash\n  $ cd path/to/your/project\n  $ npm install\n  $ npm test\n```\n\nThere is also a full working sample of how to use this approach [here][9].\n\n### Using APIeasy with vows\nWhen you install APIeasy or take it as a dependency in your `package.json` file it will not install [vows][5] globally, so to use vows you must install it globally.\n\n``` bash\n  $ [sudo] npm install vows -g\n```\n\nAfter installing vows you can simply run it from inside your project:\n\n``` bash\n  $ cd /path/to/your/project\n  $ vows\n```\n\n## Roadmap\n\n1. [Get feedback][6] on what else could be exposed through this library.\n2. Improve it.\n3. Repeat (1) + (2).\n\n## Run Tests\n<pre>\n  npm test\n</pre>\n\n#### Author: [Charlie Robbins](http://nodejitsu.com)\n\n[0]: http://nodejs.org\n[1]: http://indexzero.github.com/api-easy\n[2]: http://github.com/jashkenas\n[3]: http://github.com/jashkenas/docco\n[4]: #using-api-easy\n[5]: http://vowsjs.org\n[6]: http://github.com/indexzero/api-easy/issues\n[7]: http://npmjs.org\n[8]: https://github.com/isaacs/npm/blob/master/doc/test.md\n[9]: https://gist.github.com/1039425\n",
  "_id": "api-easy@0.3.2",
  "dist": {
    "shasum": "a6d79b4689bbfd4a38f52eda1440d6665de61d24"
  },
  "_from": "api-easy@0.3.2"
}
